{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["formatTime","time","toUTCString","slice","Clock","state","today","Date","timerCountId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","showClock","hideClock","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUMA,EAAa,SAACC,GAClB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,IAG3BC,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SACH,CAAEN,UACF,WACEI,OAAOG,QAAQC,KAAKd,EAAW,EAAKK,MAAMC,aAG7C,OAjBP,gCAoBE,SAAmBS,GACjB,IAAQC,EAAcP,KAAKQ,MAAnBD,UAEJA,IAAcD,EAAUC,WAC1BN,OAAOG,QAAQK,MAAf,uBAAqCH,EAAUC,UAA/C,eAA+DA,MAxBrE,kCA4BE,WACEG,cAAcV,KAAKD,gBA7BvB,oBAgCE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAU,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGpB,EAAWM,YA7CtB,GAA2Be,aCV3B,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAyB,CACvBsB,UAAU,EACVX,UAAW,WAHf,EAMER,aAAe,EANjB,EAwBEoB,UAAY,WACV,EAAKhB,SAAS,CAAEe,UAAU,KAzB9B,EA4BEE,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKnB,SAAS,CAAEe,UAAU,KA9B9B,uDAQE,WAA2B,IAAD,OACxBlB,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,MAEHU,SAASC,iBAAiB,QAASxB,KAAKmB,WACxCI,SAASC,iBAAiB,cAAexB,KAAKoB,aAdlD,kCAiBE,WACEV,cAAcV,KAAKD,cAEnBwB,SAASE,oBAAoB,QAASzB,KAAKmB,WAC3CI,SAASE,oBAAoB,cAAezB,KAAKoB,aArBrD,oBAiCE,WACE,MAAgCpB,KAAKJ,MAA7BsB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCO,GACC,cAAC,EAAD,CAAOX,UAAWA,WAxC5B,GAAyBK,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.1ec15b59.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  clockName: string;\n};\n\nconst formatTime = (time: Date) => {\n  return time.toUTCString().slice(-12, -4);\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerCountId = 0;\n\n  componentDidMount() {\n    this.timerCountId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState(\n        { today },\n        () => {\n          window.console.info(formatTime(this.state.today));\n        },\n      );\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { clockName } = this.props;\n\n    if (clockName !== prevProps.clockName) {\n      window.console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerCountId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {formatTime(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerCountId = 0;\n\n  componentDidMount(): void {\n    this.timerCountId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', this.showClock);\n    document.addEventListener('contextmenu', this.hideClock);\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerCountId);\n\n    document.removeEventListener('click', this.showClock);\n    document.removeEventListener('contextmenu', this.hideClock);\n  }\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}